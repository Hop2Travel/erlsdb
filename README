ErlSDB README
-------------
This code is a overhaul of Shahzad Bhatti's original code (apparently not maintained anymore).

Summary
-----------
Amazon SimpleDB is a web service for running queries on structured data 
in real time. See aws.amazon.com/simpledb.
This erlsdb library provides interface to access SimpleDB web service using
REST APIs.

Author:  Shahzad Bhatti <bhatti@plexobject.com>
Author: Eric Cestari <eric@ohmforce.com>
Version: 1.0
Date:    2009/02/23

Requirements
------------

- OTP-R12B (http://erlang.org/download.html)

- An Amazon Web Services account - See http://www.amazonaws.com


Features
---------
- Uses Signature V2
- Multiple servers are ran (default : 5)
- HTTP calls are asynchronous, per server.
- SSL support enabled by default (for deactivating see example usage below)
- Initial support for Query

TODO
-----
- Update documentation
- Finish support for QueryWithAttributes and Select (only result parsing left)
- The many little things that will make this library production-worthy.

License
-------

Released under the GNU General Public License v2.

= BUILDING =

Type rake.
The first time, you will need to edit erlang_config.rb.
Re-run rake

= RUNNING = 
# SSL is deactivated in the following : 
erl -boot release_local/erlsdb-initial -erlsdb access '"<AWS_ACCESS_ID>"' secret '"<AWS_SECRET_KEY>"' ssl false
1> erlsdb:create_domain("fubar").
nil
2> erlsdb:list_domains().
{ok,["fubar"],[]}
3> erlsdb:put_attributes("fubar", "test", [{"foo", "bar"}]).
nil
4> erlsdb:get_attributes("fubar", "test").
{ok,[{"foo","bar"}]}

= About building = 
(Extract from charpi's readme)

rake --tasks : to know all tasks

You'll need a configuration in which you'll have to put things specific to your installation.
A template of file is generated the first time you launch 'rake'

Here is some useful tasks:
rake erlang:modules: Compile all erlang source files (test included)
rake erlang:releases: Build a tarball for each rel file found in the directory tree
rake erlang:tests[name]: Run the eunit test for the application "name". If no name is given, 
     all applications are tested. If a file test.desc is find in the "app_name/test" directory, eunit will
     use it as eunit test description.
rake erlang:edoc[name]: Build the document for an application or all if 'name' is omitted
rake otp:new_application[name]: Create a new application squeleton
rake otp:start_local[name]: Start a release in the developper environment

rake otp:initial_targer[name,version]: Create a tarball with a 'ready' to deploy
     an erlang system running the release. To use the system, you have to provide
     2 startup files in a directory named 'release_config'. Look at the sample in the
     application sample_rake.
= Build Author = 
Nicolas Charpentier <open_source@charpi.net>


